{
  "version": 3,
  "sources": ["../react/src/shared/const/common.ts", "../react/src/shared/types/model.ts", "../react/src/database/lora.ts", "../react/src/database/suggestion.ts", "../react/src/database/tag.ts", "../react/src/shared/state/context.ts", "../react/src/shared/util.ts", "../react/src/shared/state/prompt.ts", "../react/src/prompt/editor.ts", "../react/src/prompt/parser.ts", "../react/src/ui/context.ts", "../react/src/ui/binder.ts", "../node_modules/fflate/esm/browser.js", "../react/src/index.ts"],
  "sourcesContent": ["export const EXTENSION_ID: string = 'prompt_pilot';\nexport const API_PREFIX: string = `/${EXTENSION_ID}/v1`;\n", "export interface Model {\n    value: string;\n}\n\nexport interface TagModel extends Model {\n    values: string[];\n    flatValue: string;\n    category: string;\n    useCount: number;\n    postCount: number;\n    consequentTagModel: TagModel | undefined;\n    isOfficial: boolean;\n}\n\nexport interface LoraModel extends Model {\n    group: string;\n    searchWords: string[];\n    previewFile: string;\n}\n\nexport interface SuggestionModel extends Model {\n    count: number;\n}\n\nexport class Result<T extends Model> {\n    model: T;\n    view: HTMLLIElement | undefined;\n\n    constructor(model: T) {\n        this.model = model;\n    }\n}\n\nexport class TagResult extends Result<TagModel> {\n    isPriority: boolean;\n    matchedWords: { word: string; index: number }[] = [];\n\n    constructor(model: TagModel, isPriority: boolean) {\n        super(model);\n        this.isPriority = isPriority;\n    }\n\n    compare(other: TagResult, query: string, joinedQuery: string | undefined, queries: string[], resultCount: Record<string, number>): number {\n        if (this.isPriority && !other.isPriority) return -1;\n        if (!this.isPriority && other.isPriority) return 1;\n\n        if (this.model.value === query || (joinedQuery && this.model.value === joinedQuery)) return -1;\n        if (other.model.value === query || (joinedQuery && other.model.value === joinedQuery)) return 1;\n\n        if (other.matchedWords.length !== this.matchedWords.length) {\n            return other.matchedWords.length - this.matchedWords.length;\n        } else if (queries.length === this.matchedWords.length) {\n            for (let i = 0; i < this.matchedWords.length; i++) {\n                if (this.matchedWords[i].index !== other.matchedWords[i].index) {\n                    return this.matchedWords[i].index - other.matchedWords[i].index;\n                }\n            }\n        }\n\n        if (other.model.useCount !== this.model.useCount) {\n            return other.model.useCount - this.model.useCount;\n        }\n        const count = resultCount[this.model.value] - resultCount[other.model.value];\n        if (count !== 0) {\n            return count;\n        }\n        if (other.model.postCount !== this.model.postCount) {\n            return other.model.postCount - this.model.postCount;\n        }\n\n        return this.model.value < other.model.value ? -1 : 1;\n    }\n}\n\nexport class LoraResult extends Result<LoraModel> {\n    matchWords: string[] = [];\n    startsWith: boolean = false;\n\n    constructor(model: LoraModel) {\n        super(model);\n    }\n\n    compare(other: LoraResult, query: string, queries: string[]): number {\n        if (this.model.value === query) return -1;\n        if (other.model.value === query) return 1;\n\n        if (other.matchWords.length !== this.matchWords.length) {\n            return other.matchWords.length - this.matchWords.length;\n        }\n\n        const thisStartsQuery = this.matchStarts(queries);\n        const otherStartsQuery = other.matchStarts(queries);\n        if (thisStartsQuery && !otherStartsQuery) return -1;\n        if (!thisStartsQuery && otherStartsQuery) return 1;\n\n        return this.model.value < other.model.value ? -1 : 1;\n    }\n\n    matchStarts(queries: string[]): boolean {\n        for (const q of queries) {\n            for (const title of this.model.value.split(/[ _-]/g)) {\n                if (title.startsWith(q)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport class SuggestionResult extends Result<SuggestionModel> {\n    constructor(model: SuggestionModel) {\n        super(model);\n    }\n}\n", "import { EXTENSION_ID } from '../shared/const/common';\nimport { ResponseData } from '../shared/types/api';\nimport { LoraModel, LoraResult } from '../shared/types/model';\n\nlet errorFlag = false;\n\nlet loraModels: LoraModel[];\n\nexport function isLoaded() {\n    return loraModels;\n}\n\nexport function hasError() {\n    return errorFlag;\n}\n\nexport function setErrorFlag(flag: boolean) {\n    errorFlag = flag;\n}\n\nexport function initializeLoraModels(resData: ResponseData | undefined): void {\n    if (!resData) {\n        errorFlag = true;\n        return;\n    }\n    try {\n        loraModels = [];\n        Object.entries(resData.loraModels).forEach(([lora_name, data]) => {\n            loraModels.push({\n                value: lora_name,\n                group: 'lora',\n                searchWords: data.search_words,\n                previewFile: data.preview_file,\n            });\n        });\n    } catch (e) {\n        console.error(e);\n        errorFlag = true;\n    }\n}\n\nexport function searchLora(query: string): LoraResult[] {\n    const queries = query\n        .toLowerCase()\n        .split(/[ _-]/g)\n        .filter((q) => q.trim() !== '');\n\n    let resultSet: LoraResult[] = [];\n    loraModels.forEach((lora) => {\n        const matchWordSet = new Set<string>();\n        for (const word of lora.searchWords) {\n            const flatWord = word.replace(/[ _-]/g, '');\n            queries.forEach((q) => {\n                if (flatWord.includes(q)) {\n                    matchWordSet.add(q);\n                }\n            });\n        }\n        if (queries.length === matchWordSet.size) {\n            const result = new LoraResult(lora);\n            result.matchWords = [...matchWordSet];\n            resultSet.push(result);\n        }\n    });\n    resultSet = resultSet.sort((a, b) => a.compare(b, query, queries));\n    let groupCounter = window.opts[`${EXTENSION_ID}_max_results_grouplora`] as number;\n    return resultSet.filter(() => {\n        if (groupCounter > 0) {\n            groupCounter -= 1;\n            return true;\n        }\n        return false;\n    });\n}\n", "import { ResponseData } from '../shared/types/api';\nimport { SuggestionModel, SuggestionResult } from '../shared/types/model';\n\nlet errorFlag = false;\n\nlet suggestionModels: Record<string, SuggestionModel[]>;\n\nexport function isLoaded() {\n    return suggestionModels;\n}\n\nexport function hasError() {\n    return errorFlag;\n}\n\nexport function setErrorFlag(flag: boolean) {\n    errorFlag = flag;\n}\n\nexport function initializeSuggestionModels(resData: ResponseData | undefined): void {\n    if (!resData) {\n        errorFlag = true;\n        return;\n    }\n    try {\n        suggestionModels = {};\n        Object.entries(resData.suggestionModels).forEach(([word, record]) => {\n            const sorted = Object.entries(record).sort(([, count1], [, count2]) => count2 - count1);\n            suggestionModels[word] = sorted.map(([word, count]) => ({\n                value: word,\n                count: count,\n            }));\n        });\n    } catch (e) {\n        console.error(e);\n        errorFlag = true;\n    }\n}\n\nexport function searchSuggestion(nearestTag: string | undefined, existTags: Set<string>): SuggestionResult[] {\n    if (!nearestTag) {\n        return [];\n    }\n    const suggestions = suggestionModels[nearestTag];\n    if (!suggestions) return [];\n    const result: SuggestionResult[] = [];\n    for (const candidate of suggestions) {\n        if (!existTags.has(candidate.value)) {\n            result.push(new SuggestionResult(candidate));\n        }\n    }\n    return result;\n}\n", "import { EXTENSION_ID } from '../shared/const/common';\nimport { ResponseData } from '../shared/types/api';\nimport { TagModel, TagResult } from '../shared/types/model';\n\nlet errorFlag = false;\n\nlet tagModels: Record<string, TagModel>;\nlet tagIndex: Record<string, Record<string, TagModel>>;\nexport let alwaysUnderscoreTags: Set<string>;\nexport let alwaysSpaceTags: Set<string>;\n\nexport function isLoaded() {\n    return tagModels && tagIndex;\n}\n\nexport function hasError() {\n    return errorFlag;\n}\n\nexport function setErrorFlag(flag: boolean) {\n    errorFlag = flag;\n}\n\nexport function initializeTagModels(resData: ResponseData | undefined): void {\n    if (!resData) {\n        errorFlag = true;\n        return;\n    }\n    try {\n        alwaysUnderscoreTags = new Set();\n        (window.opts[`${EXTENSION_ID}_always_underscore_tags`] as string).split(/[\\n,]/).forEach((tag: string) => {\n            tag = tag.trim().replace(/_/g, ' ');\n            if (tag) {\n                alwaysUnderscoreTags.add(tag);\n            }\n        });\n\n        alwaysSpaceTags = new Set();\n        (window.opts[`${EXTENSION_ID}_always_space_tags`] as string).split(/[\\n,]/).forEach((tag: string) => {\n            tag = tag.trim().replace(/_/g, ' ');\n            if (tag) {\n                alwaysSpaceTags.add(tag);\n            }\n        });\n\n        tagModels = {};\n        Object.entries(resData.tagModels).forEach(([tag, data]) => {\n            const splitTag = tag.split(/[ _-]/g);\n            const tagModel: TagModel = tagModels[tag] ?? {\n                value: tag,\n                values: tag.split(/[ _-]/g),\n                flatValue: splitTag.join(''),\n                category: data.category,\n                useCount: data.use_count,\n                postCount: data.post_count,\n                consequentTagModel: undefined,\n                isOfficial: true,\n            };\n            tagModel.isOfficial = true;\n            for (const alias of data.aliases) {\n                const splitAlias = alias.split(/[ _-]/g);\n                const aliasTagModel = tagModels[alias] ?? {\n                    value: alias,\n                    values: alias.split(/[ _-]/g),\n                    flatValue: splitAlias.join(''),\n                    category: data.category,\n                    useCount: data.use_count,\n                    postCount: data.post_count,\n                    consequentTagModel: tagModel,\n                    isOfficial: false,\n                };\n                if (aliasTagModel.isOfficial) {\n                    aliasTagModel.consequentTagModel = tagModel;\n                } else {\n                    tagModels[alias] = aliasTagModel;\n                }\n            }\n            tagModels[tag] = tagModel;\n        });\n\n        buildTagIndex(tagModels);\n    } catch (e) {\n        console.error(e);\n        errorFlag = true;\n    }\n}\n\nfunction getPrefixes(tag: string, maxLen = 3): Set<string> {\n    const set: Set<string> = new Set();\n    for (const t of tag.split(/[ _-]/g)) {\n        const len = Math.min(maxLen, t.length);\n        for (let i = 1; i <= len; i++) {\n            set.add(t.substring(0, i));\n        }\n    }\n    return set;\n}\n\nexport function buildTagIndex(tagModels: Record<string, TagModel>): void {\n    tagIndex = {};\n    for (const tagModel of Object.values(tagModels)) {\n        const prefixes = getPrefixes(tagModel.value, 3);\n        for (const p of prefixes) {\n            if (!(p in tagIndex)) {\n                tagIndex[p] = {};\n            }\n            tagIndex[p][tagModel.value] = tagModel;\n        }\n    }\n}\n\nfunction appendTagModel(tagModel: TagModel): void {\n    if (tagModel.value && tagModel.value in tagModels) {\n        return;\n    }\n    tagModels[tagModel.value] = tagModel;\n    const prefixes = getPrefixes(tagModel.value, 3);\n    for (const p of prefixes) {\n        if (!(p in tagIndex)) {\n            tagIndex[p] = {};\n        }\n        tagIndex[p][tagModel.value] = tagModel;\n    }\n}\n\nexport function getTagModel(tag: string): TagModel | undefined {\n    return tagModels[tag];\n}\n\nexport function searchTag(query: string, priorityTags: string[]): TagResult[] {\n    const queries = query\n        .toLowerCase()\n        .split(/[ _-]/g)\n        .filter((q) => q.trim() !== '');\n    let joinedQuery: string | undefined;\n    if (queries.length > 1) {\n        joinedQuery = queries.join('');\n    }\n\n    const priorityTagSet = new Set(priorityTags);\n    let resultList: TagResult[] = [];\n    const resultKeySet: Record<string, boolean> = {};\n    queries.forEach((queryForCandidate) => {\n        const prefixKey = queryForCandidate.length > 3 ? queryForCandidate.slice(0, 3) : queryForCandidate;\n        const candidateTagList = tagIndex[prefixKey];\n        for (const key in candidateTagList) {\n            if (key in resultKeySet) {\n                continue;\n            }\n            const tagModel = candidateTagList[key];\n\n            const matchedWords: { word: string; index: number }[] = [];\n            if (joinedQuery && tagModel.value.startsWith(joinedQuery)) {\n                for (let i = 0; i < queries.length; i++) {\n                    matchedWords.push({ word: queries[i], index: i });\n                }\n            } else {\n                const matchedQueryIndices: Record<number, boolean> = {};\n                for (const query of queries) {\n                    if (!(0 in matchedQueryIndices) && tagModel.flatValue.startsWith(query)) {\n                        matchedWords.push({ word: query, index: 0 });\n                        matchedQueryIndices[0] = true;\n                        continue;\n                    }\n                    for (let i = 0; i < tagModel.values.length; i++) {\n                        if (!(i in matchedQueryIndices) && tagModel.values[i].startsWith(query)) {\n                            matchedWords.push({ word: query, index: i });\n                            matchedQueryIndices[i] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (matchedWords.length > 0) {\n                const result = new TagResult(tagModel, priorityTagSet.has(tagModel.value));\n                result.matchedWords = matchedWords;\n                resultList.push(result);\n                resultKeySet[key] = true;\n            }\n        }\n    });\n\n    const consequentTagMatchCount = resultList\n        .filter((r) => !r.model.consequentTagModel)\n        .reduce<Record<string, number>>((acc, r) => {\n            acc[r.model.value] = r.matchedWords.length;\n            return acc;\n        }, {});\n    resultList = resultList.filter((r) => {\n        if (!r.model.consequentTagModel) return true;\n        const consequentTag = r.model.consequentTagModel.value;\n        return !(consequentTag in consequentTagMatchCount) || consequentTagMatchCount[consequentTag] < r.matchedWords.length;\n    });\n\n    const resultTagCount: Record<string, number> = {};\n    const resultCount: Record<string, number> = {};\n    resultList.forEach((r) => {\n        r.matchedWords.forEach((m) => {\n            if (!resultTagCount[m.word]) {\n                resultTagCount[m.word] = 0;\n            }\n            resultTagCount[m.word] += 1;\n        });\n    });\n    resultList.forEach((r) => {\n        resultCount[r.model.value] = r.matchedWords.reduce((acc, m) => acc + resultTagCount[m.word], 0);\n    });\n\n    resultList = resultList.sort((a, b) => a.compare(b, query, joinedQuery, queries, resultCount));\n    const groupCounter: Record<string, number> = {};\n    for (const key of ['0', '1', '3', '4', '5', 'custom']) {\n        groupCounter[key] = window.opts[`${EXTENSION_ID}_max_results_group${key}`] as number;\n    }\n\n    return resultList.filter((r) => {\n        if (groupCounter[r.model.category] === -1 || groupCounter[r.model.category] > 0) {\n            groupCounter[r.model.category] -= 1;\n            return true;\n        }\n        return false;\n    });\n}\n\nexport function searchWithApi(query: string, callback: (results: TagResult[]) => void): void {\n    const endpoint = 'https://danbooru.donmai.us/autocomplete.json';\n    let apiUrl = endpoint;\n    apiUrl += `?search[query]=${encodeURIComponent(query)}`;\n    apiUrl += `&search[type]=tag`;\n    apiUrl += `&limit=${50}`;\n    apiUrl += `&version=1`;\n\n    let resultSet: TagResult[] = [];\n    fetch(apiUrl)\n        .then(async (res) => {\n            if (res.ok) {\n                const json = await res.json();\n                resultSet = json.map((item: { label: string; category: number; post_count: number; antecedent: string }) => {\n                    let tag;\n                    let consequentTagModel = undefined;\n                    if (item.antecedent) {\n                        tag = item.antecedent;\n                        consequentTagModel = tagModels[item.label];\n                    } else {\n                        tag = item.label;\n                    }\n                    const splitTag = tag.split(/[ _-]/g);\n                    return new TagResult(\n                        {\n                            value: tag,\n                            values: splitTag,\n                            flatValue: splitTag.join(''),\n                            category: item.category.toString(),\n                            useCount: 0,\n                            postCount: item.post_count,\n                            consequentTagModel: consequentTagModel,\n                            isOfficial: consequentTagModel === undefined,\n                        },\n                        false,\n                    );\n                });\n                resultSet.forEach((r) => {\n                    appendTagModel(r.model);\n                });\n            }\n            callback(resultSet);\n        })\n        .catch((err) => {\n            console.error('Error fetching tag data:', err);\n            callback(resultSet);\n        });\n}\n", "import { LoraResult, SuggestionResult, TagResult } from '../types/model';\n\nlet _component: HTMLDivElement;\nlet _activeTextarea: PilotTextArea;\nlet _closed: boolean = true;\nlet _visibleResultList: (TagResult | LoraResult | SuggestionResult)[] = [];\nlet _selectedResult: TagResult | LoraResult | SuggestionResult | undefined;\nlet _resultList: (TagResult | LoraResult | SuggestionResult)[] = [];\n\nlet _tabContainer: HTMLDivElement;\nlet _listContainer: HTMLUListElement;\nlet _previewContainer: HTMLDivElement;\nlet _activeTab: HTMLDivElement;\n\nexport function getComponent(): HTMLDivElement {\n    return _component;\n}\n\nexport function setComponent(component: HTMLDivElement): void {\n    _component = component;\n}\n\nexport function getActiveTextarea(): PilotTextArea | undefined {\n    return _activeTextarea;\n}\n\nexport function setActiveTextarea(textarea: PilotTextArea): void {\n    _activeTextarea = textarea;\n}\n\nexport function isClosed(): boolean {\n    return _closed;\n}\n\nexport function setClosed(closed: boolean): void {\n    _closed = closed;\n}\n\nexport function getVisibleResultList(): (TagResult | LoraResult | SuggestionResult)[] {\n    return _visibleResultList;\n}\n\nexport function getVisibleResult(index: number): TagResult | LoraResult | SuggestionResult {\n    return _visibleResultList[index];\n}\n\nexport function hasVisibleResultList(): boolean {\n    return _visibleResultList.length > 0;\n}\n\nexport function clearVisibleResultList(): void {\n    _visibleResultList = [];\n}\n\nexport function addVisibleResult(result: TagResult | LoraResult | SuggestionResult): void {\n    _visibleResultList.push(result);\n}\n\nexport function getSelectedResult(): TagResult | LoraResult | SuggestionResult | undefined {\n    return _selectedResult;\n}\n\nexport function setSelectedResult(result: TagResult | LoraResult | SuggestionResult | undefined): void {\n    _selectedResult = result;\n}\n\nexport function getResultList<T extends (TagResult | LoraResult | SuggestionResult)[]>(): T {\n    return _resultList as T;\n}\n\nexport function getResult<T extends TagResult | LoraResult | SuggestionResult>(index: number): T {\n    return _resultList[index] as T;\n}\n\nexport function setResultList(resultList: (TagResult | LoraResult | SuggestionResult)[]): void {\n    _resultList = resultList;\n}\n\nexport function clearResultList(): void {\n    _resultList = [];\n}\n\nexport function getTabContainer(): HTMLDivElement {\n    return _tabContainer;\n}\n\nexport function setTabContainer(tabContainer: HTMLDivElement): void {\n    _tabContainer = tabContainer;\n}\n\nexport function getListContainer(): HTMLUListElement {\n    return _listContainer;\n}\n\nexport function setListContainer(listContainer: HTMLUListElement): void {\n    _listContainer = listContainer;\n}\n\nexport function getPreviewContainer(): HTMLDivElement {\n    return _previewContainer;\n}\n\nexport function setPreviewContainer(previewContainer: HTMLDivElement): void {\n    _previewContainer = previewContainer;\n}\n\nexport function getActiveTab(): HTMLDivElement {\n    return _activeTab;\n}\n\nexport function setActiveTab(activeTabElement: HTMLDivElement): void {\n    _activeTab = activeTabElement;\n}\n", "// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function debounce<T extends (...args: any[]) => any>(func: T, wait: number) {\n    let debounceTimeout: ReturnType<typeof setTimeout>;\n    return (...args: Parameters<T>) => {\n        clearTimeout(debounceTimeout);\n        debounceTimeout = setTimeout(() => {\n            func(...args);\n        }, wait);\n    };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function debounceWithLeadingTrailing<T extends (...args: any[]) => any>(func: T, wait: number) {\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n    let lastCallTime: number | null = null;\n    let lastArgs: Parameters<T> | null = null;\n    let hasPendingTrailing = false;\n\n    return (...args: Parameters<T>) => {\n        const now = Date.now();\n\n        if (!lastCallTime || now - lastCallTime >= wait) {\n            func(...args);\n            hasPendingTrailing = false;\n        } else {\n            hasPendingTrailing = true;\n            lastArgs = args;\n        }\n        lastCallTime = now;\n\n        if (timeout) clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            if (hasPendingTrailing && lastArgs) {\n                func(...lastArgs);\n            }\n            lastCallTime = null;\n            hasPendingTrailing = false;\n        }, wait);\n    };\n}\n\nexport async function fetchWithRetry(input: RequestInfo, init: RequestInit, retries: number = 5, delay: number = 1000): Promise<Response> {\n    for (let attempt = 0; attempt <= retries; attempt++) {\n        const res = await fetch(input, init);\n        if (res.ok) {\n            return res;\n        }\n        if (attempt === retries) {\n            console.error(`[Prompt Pilot] Fetch failed after ${retries} attempts`);\n            return res;\n        }\n        console.warn(`[Prompt Pilot] Retrying... (${attempt + 1}/${retries})`);\n        await new Promise((resolve) => setTimeout(resolve, delay));\n    }\n    throw new Error('Unexpected error in fetchWithRetry');\n}\n\nexport function formatNumberWithUnits(num: number): string {\n    if (Math.abs(num) >= 1e12) {\n        return (num / 1e12).toFixed(1) + 'T';\n    } else if (Math.abs(num) >= 1e9) {\n        return (num / 1e9).toFixed(1) + 'G';\n    } else if (Math.abs(num) >= 1e6) {\n        return (num / 1e6).toFixed(1) + 'M';\n    } else if (Math.abs(num) >= 1e3) {\n        return (num / 1e3).toFixed(1) + 'K';\n    } else {\n        return num.toString();\n    }\n}\n\nexport function htmlEncode(str: string): string {\n    return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nexport function escapeRegex(str: string): string {\n    return str.replace(/[.*+?^${}()|\\[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function escapePrompt(str: string): string {\n    return str.replace(/[{}()\\[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function unescapePrompt(str: string): string {\n    let result = '';\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            if (i + 1 < str.length) {\n                result += str[i + 1];\n                i++;\n            } else {\n                result += '\\\\';\n            }\n        } else {\n            result += str[i];\n        }\n    }\n    return result;\n}\n\nexport function splitStringWithIndices(input: string, delimiter: RegExp): { word: string; position: number }[] {\n    const result: { word: string; position: number }[] = [];\n    const regex = delimiter;\n    let match: RegExpExecArray | null;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(input)) !== null) {\n        result.push({ word: input.slice(lastIndex, match.index), position: lastIndex });\n        lastIndex = regex.lastIndex;\n    }\n\n    result.push({ word: input.slice(lastIndex), position: lastIndex });\n    return result;\n}\n", "import { PromptItem } from '../types/prompt';\n\nlet _prompt: string;\nlet _caret: number;\nlet _isComposing = false;\nlet _isWeightChanging = false;\nlet _activeWord: string;\nlet _activePromptItemIndex: number;\nlet _promptItems: PromptItem[];\nlet _isMetaBlock: boolean;\nlet _prependComma: boolean;\nlet _prependSpace: boolean;\n\nexport function initialize(prompt: string, caret: number): void {\n    _prompt = prompt;\n    _caret = caret;\n    _activeWord = '';\n    _activePromptItemIndex = -1;\n    _promptItems = [];\n    _isMetaBlock = false;\n    _prependComma = false;\n    _prependSpace = false;\n}\n\nexport function getPrompt(): string {\n    return _prompt;\n}\n\nexport function setPrompt(prompt: string): void {\n    _prompt = prompt;\n}\n\nexport function getCaret(): number {\n    return _caret;\n}\n\nexport function setCaret(caret: number): void {\n    _caret = caret;\n}\n\nexport function isComposing(): boolean {\n    return _isComposing;\n}\n\nexport function setComposing(isComposing: boolean): void {\n    _isComposing = isComposing;\n}\n\nexport function isWeightChanging(): boolean {\n    return _isWeightChanging;\n}\n\nexport function setWeightChanging(isWeightChanging: boolean): void {\n    _isWeightChanging = isWeightChanging;\n}\n\nexport function getActiveWord(): string {\n    return _activeWord;\n}\n\nexport function setActiveWord(activeWord: string): void {\n    _activeWord = activeWord;\n}\n\nexport function getActivePromptItemIndex(): number {\n    return _activePromptItemIndex;\n}\n\nexport function setActivePromptItemIndex(activeTagIndex: number): void {\n    _activePromptItemIndex = activeTagIndex;\n}\n\nexport function getPromptItemList(): PromptItem[] {\n    return _promptItems;\n}\n\nexport function getPromptItem(index: number): PromptItem {\n    return _promptItems[index];\n}\n\nexport function getActivePromptItem(): PromptItem {\n    return _promptItems[_activePromptItemIndex];\n}\n\nexport function setPromptItemList(promptItemList: PromptItem[]): void {\n    _promptItems = promptItemList;\n}\n\nexport function addPromptItem(promptItem: PromptItem): void {\n    _promptItems.push(promptItem);\n}\n\nexport function isMetaBlock(): boolean {\n    return _isMetaBlock;\n}\n\nexport function setMetaBlock(isMetaBlock: boolean): void {\n    _isMetaBlock = isMetaBlock;\n}\n\nexport function needPrependComma(): boolean {\n    return _prependComma;\n}\n\nexport function setNeedPrependComma(prependComma: boolean): void {\n    _prependComma = prependComma;\n}\n\nexport function needPrependSpace(): boolean {\n    return _prependSpace;\n}\n\nexport function setNeedPrependSpace(prependSpace: boolean): void {\n    _prependSpace = prependSpace;\n}\n", "import * as db_tag from '../database/tag';\nimport { EXTENSION_ID } from '../shared/const/common';\nimport * as contextState from '../shared/state/context';\nimport * as promptState from '../shared/state/prompt';\nimport { LoraModel, LoraResult, Result, SuggestionModel, SuggestionResult, TagModel, TagResult } from '../shared/types/model';\nimport { escapePrompt, escapeRegex, splitStringWithIndices, unescapePrompt } from '../shared/util';\n\ninterface InsertionInfo {\n    range: {\n        start: number;\n        end: number;\n    };\n    insertText: string;\n}\n\nexport function insertWordIntoPrompt(result: Result<TagModel | LoraModel | SuggestionModel> | undefined) {\n    if (!result) {\n        result = contextState.getSelectedResult();\n    }\n    if (!result) {\n        return;\n    }\n\n    let insertionInfo: InsertionInfo;\n    if (result instanceof TagResult) {\n        insertionInfo = getTagInsertionInfo(result.model);\n    } else if (result instanceof LoraResult) {\n        insertionInfo = getLoraInsertionInfo(result.model);\n    } else if (result instanceof SuggestionResult) {\n        insertionInfo = getSuggestionInsertionInfo(result.model);\n    } else {\n        return;\n    }\n\n    const usingExecCommand = window.opts[`${EXTENSION_ID}_using_execCommand`] as boolean;\n\n    const textarea = contextState.getActiveTextarea()!;\n    if (usingExecCommand) {\n        textarea.focus();\n        textarea.setSelectionRange(insertionInfo.range.start, insertionInfo.range.end);\n        document.execCommand('insertText', false, insertionInfo.insertText);\n    } else {\n        const val = textarea.value;\n        textarea.value = val.slice(0, insertionInfo.range.start) + insertionInfo.insertText + val.slice(insertionInfo.range.end);\n    }\n    textarea.selectionStart = textarea.selectionEnd = insertionInfo.range.start + insertionInfo.insertText.length;\n}\n\nfunction getTagInsertionInfo(model: TagModel): InsertionInfo {\n    let startPosition = promptState.getActivePromptItem().position;\n    let offset = -1;\n    const tags: string[] = [];\n    tags.push(model.value);\n    if (model.consequentTagModel) {\n        tags.push(model.consequentTagModel.value);\n    }\n    const insertionRange = promptState.getPrompt().substring(startPosition, promptState.getCaret());\n    for (const wordInfo of splitStringWithIndices(insertionRange, /[ _-]/g)) {\n        for (const tag of tags) {\n            if (wordInfo.word === '') {\n                continue;\n            }\n            const escapedPart = escapeRegex(unescapePrompt(wordInfo.word));\n            const match = new RegExp(`(?:^|[ _-])${escapedPart}`, 'gi').exec(tag);\n            if (match && match.index !== -1) {\n                if (offset === -1 || offset > wordInfo.position) {\n                    offset = wordInfo.position;\n                }\n            }\n        }\n    }\n    if (offset > -1) {\n        startPosition += offset;\n    }\n\n    let insertTag = model.isOfficial ? model.value : model.consequentTagModel!.value;\n    const source = (window.opts[`${EXTENSION_ID}_tag_source`] as string).replace(/\\./g, '_');\n    const delimiter = (window.opts[`${EXTENSION_ID}_${source}_${model.category}_tag_delimiter`] as string) ?? 'auto';\n    if (!db_tag.alwaysSpaceTags.has(insertTag)) {\n        let replaceToUnderscore = false;\n        if (db_tag.alwaysUnderscoreTags.has(insertTag)) {\n            replaceToUnderscore = true;\n        } else if (delimiter === 'underscore') {\n            replaceToUnderscore = true;\n        } else if (delimiter === 'auto') {\n            replaceToUnderscore = promptState.getActiveWord().includes('_');\n        }\n        if (replaceToUnderscore) {\n            insertTag = insertTag.replace(/ /g, '_');\n        }\n    }\n\n    if (promptState.needPrependComma()) {\n        insertTag = ', ' + insertTag;\n    } else if (offset <= 0 && promptState.needPrependSpace()) {\n        insertTag = ' ' + insertTag;\n    }\n    insertTag = escapePrompt(insertTag);\n\n    const appendComma = window.opts[`${EXTENSION_ID}_append_comma`] as boolean;\n    if (appendComma) {\n        insertTag += ',';\n    }\n    insertTag += ' ';\n    return { range: { start: startPosition, end: promptState.getCaret() }, insertText: insertTag };\n}\n\nfunction getLoraInsertionInfo(model: LoraModel): InsertionInfo {\n    const startPosition = promptState.getActivePromptItem().position;\n    let loraName = model.value;\n    const match = promptState\n        .getPrompt()\n        .substring(startPosition)\n        .match(/^<(?:lora|lyco):[^<>:]+(:.+>)/i);\n    let caret = promptState.getCaret();\n    if (match) {\n        caret = startPosition + match[0].length;\n        loraName += match[1];\n    } else {\n        loraName += ':1>';\n    }\n    loraName += ' ';\n    return { range: { start: startPosition, end: caret }, insertText: loraName };\n}\n\nfunction getSuggestionInsertionInfo(model: SuggestionModel): InsertionInfo {\n    const startPosition = promptState.getActivePromptItem().position;\n    const tag = db_tag.getTagModel(model.value);\n    const category = tag?.category ?? 'custom';\n    let word = escapePrompt(model.value);\n\n    const source = (window.opts[`${EXTENSION_ID}_tag_source`] as string).replace(/\\./g, '_');\n    const delimiter = (window.opts[`${EXTENSION_ID}_${source}_${category}_tag_delimiter`] as string) ?? 'auto';\n    if (!db_tag.alwaysSpaceTags.has(word)) {\n        let replaceToUnderscore = false;\n        if (db_tag.alwaysUnderscoreTags.has(word)) {\n            replaceToUnderscore = true;\n        } else if (delimiter === 'underscore') {\n            replaceToUnderscore = true;\n        } else if (delimiter === 'auto') {\n            replaceToUnderscore = promptState.getActiveWord().includes('_');\n        }\n        if (replaceToUnderscore) {\n            word = word.replace(/ /g, '_');\n        }\n    }\n\n    if (promptState.needPrependComma()) {\n        word = ', ' + word;\n    } else if (promptState.needPrependSpace()) {\n        word = ' ' + word;\n    }\n\n    const appendComma = window.opts[`${EXTENSION_ID}_append_comma`] as boolean;\n    if (appendComma) {\n        word += ',';\n    }\n    word += ' ';\n    return { range: { start: startPosition, end: promptState.getCaret() }, insertText: word };\n}\n", "import * as promptState from '../shared/state/prompt';\nimport { PromptItem, PromptItemType } from '../shared/types/prompt';\n\nenum NestType {\n    Root,\n    Paren,\n    Square,\n    Curly,\n    Angle,\n    Lora,\n}\n\nconst openerToType: Record<string, NestType> = {\n    '(': NestType.Paren,\n    '[': NestType.Square,\n    '{': NestType.Curly,\n    '<': NestType.Angle,\n};\n\nconst closerToType: Record<string, NestType> = {\n    ')': NestType.Paren,\n    ']': NestType.Square,\n    '}': NestType.Curly,\n    '>': NestType.Angle,\n};\n\nconst closerForType: Record<NestType, string> = {\n    [NestType.Root]: '',\n    [NestType.Paren]: ')',\n    [NestType.Square]: ']',\n    [NestType.Curly]: '}',\n    [NestType.Angle]: '>',\n    [NestType.Lora]: '>',\n};\n\nconst delimiters: Record<NestType, Set<string>> = {\n    [NestType.Root]: new Set<string>([',']),\n    [NestType.Paren]: new Set<string>([',']),\n    [NestType.Square]: new Set<string>([',', ':', '|']),\n    [NestType.Curly]: new Set<string>([',', '|']),\n    [NestType.Angle]: new Set<string>([',', '|']),\n    [NestType.Lora]: new Set<string>(),\n};\n\nconst delimitersWithoutComma = new Set<string>([',', '|', ':', '(', '[', '{', '<']);\n\n// length of the string \"lora:\" or \"lyco:\"\nconst PREFIX_LENGTH = 5;\n\nconst metaKeywords = ['BREAK', 'AND', 'ADDCOMM', 'ADDBASE', 'ADDCOL', 'ADDROW'];\n\nconst dynamicPromptRegex = /\\{([\\d-]+\\$\\$(?:[^\\}]+?\\$\\$)?)(.*)\\}/g;\n\nconst matchMetaKeywordRegex = new RegExp(`\\\\b(${metaKeywords.join('|')})\\\\b`, 'g');\n\nfunction makePromptItem(nestType: NestType, position: number): PromptItem {\n    const promptItemType = nestType === NestType.Lora ? PromptItemType.Lora : PromptItemType.Tag;\n    return {\n        value: '',\n        position: position,\n        type: promptItemType,\n        isActive: false,\n    };\n}\n\nexport function updatePromptState(prompt: string, caret: number): void {\n    promptState.initialize(prompt, caret);\n\n    prompt = prompt.replace(matchMetaKeywordRegex, (match) => ','.padEnd(match.length, '\\0'));\n    prompt = prompt.replace(dynamicPromptRegex, (_, group1, group2) => {\n        const stars = '\\0'.repeat(group1.length);\n        return `{${stars}${group2}}`;\n    });\n\n    const nestTypes = [NestType.Root];\n    let isEscaped = false;\n    let delimiter: string | undefined;\n    let isNewLine = true;\n\n    function flush(promptItem: PromptItem) {\n        promptItem.value = promptItem.value.trim();\n        if (promptItem.isActive || promptItem.value !== '') {\n            promptState.addPromptItem(promptItem);\n            isNewLine = false;\n            delimiter = undefined;\n        }\n    }\n\n    function updateContextState(char: string) {\n        if (char === '\\n') {\n            isNewLine = true;\n        } else if (delimitersWithoutComma.has(char)) {\n            delimiter = char;\n        }\n    }\n\n    function updatePrependFlags(promptItem: PromptItem) {\n        if (promptItem.isActive && promptState.getPromptItemList().length > 0) {\n            if (delimiter === undefined) {\n                promptState.setNeedPrependComma(true);\n                if (!isNewLine) {\n                    promptState.setNeedPrependSpace(true);\n                }\n            } else if (delimiter === ',') {\n                promptState.setNeedPrependSpace(true);\n            }\n        }\n    }\n\n    function setActivePromptItem(promptItem: PromptItem) {\n        promptItem.isActive = true;\n        let activeTag = promptState.getActiveWord();\n        if (isEscaped) {\n            activeTag += '\\\\';\n            promptState.setActiveWord(activeTag);\n        }\n        promptState.setActiveWord(promptItem.value.trim());\n        promptState.setActivePromptItemIndex(promptState.getPromptItemList().length);\n    }\n\n    let promptItem: PromptItem = makePromptItem(NestType.Root, 0);\n\n    for (let i = 0; i < prompt.length; i++) {\n        const char = prompt[i];\n        if (i === caret) {\n            setActivePromptItem(promptItem);\n        }\n\n        const currentNestType = nestTypes[nestTypes.length - 1];\n\n        if (char === '\\0') {\n            if (promptItem.isActive) {\n                promptState.setMetaBlock(true);\n                promptState.setNeedPrependSpace(true);\n            }\n            promptItem.position++;\n            continue;\n        }\n        if (char === '\\n') {\n            updatePrependFlags(promptItem);\n            flush(promptItem);\n            updateContextState(char);\n            promptItem = makePromptItem(currentNestType, i + 1);\n\n            isEscaped = false;\n            continue;\n        }\n        if (isEscaped) {\n            promptItem.value += char;\n            isEscaped = false;\n            continue;\n        }\n        if (char === '\\\\') {\n            isEscaped = true;\n            continue;\n        }\n\n        if (char in openerToType) {\n            let openerType = openerToType[char];\n            if (openerType === NestType.Angle) {\n                if (prompt.length - i > PREFIX_LENGTH) {\n                    const loraPrefix = prompt.substring(i + 1, i + PREFIX_LENGTH + 1);\n                    if (loraPrefix === 'lora:' || loraPrefix === 'lyco:') {\n                        openerType = NestType.Lora;\n                    }\n                }\n            }\n            nestTypes.push(openerType);\n\n            if (openerType === NestType.Lora) {\n                i += PREFIX_LENGTH;\n                if (i - caret >= 0 && i - caret < PREFIX_LENGTH) {\n                    promptState.setMetaBlock(true);\n                }\n            }\n            updatePrependFlags(promptItem);\n            flush(promptItem);\n            updateContextState(char);\n            if (openerType === NestType.Lora) {\n                promptItem = makePromptItem(openerType, i + 1);\n            } else {\n                promptItem = makePromptItem(openerType, i);\n            }\n            continue;\n        }\n\n        if (char in closerToType) {\n            const expectedCloser = closerForType[currentNestType];\n            if (char !== expectedCloser) {\n                promptItem.value += char;\n                continue;\n            }\n            if (currentNestType === NestType.Paren || currentNestType === NestType.Square) {\n                const colonIndex = promptItem.value.lastIndexOf(':');\n                if (colonIndex >= 0) {\n                    const word = promptItem.value.substring(0, colonIndex);\n                    const weightValue = promptItem.value.substring(colonIndex + 1);\n                    if (isNumber(weightValue)) {\n                        promptItem.value = word;\n                        if (promptItem.isActive && i - caret <= weightValue!.length) {\n                            promptState.setMetaBlock(true);\n                        }\n                    }\n                } else if (currentNestType === NestType.Square) {\n                    if (isNumber(promptItem.value)) {\n                        if (promptItem.isActive && i - caret <= promptItem.value.length) {\n                            promptState.setMetaBlock(true);\n                        }\n                        promptItem.value = '';\n                    }\n                }\n            } else if (currentNestType === NestType.Lora) {\n                const colonIndex = promptItem.value.indexOf(':');\n                if (colonIndex >= 0) {\n                    const loraName = promptItem.value.substring(0, colonIndex);\n                    const multiplier = promptItem.value.substring(colonIndex + 1);\n                    if (promptItem.isActive && i - caret <= multiplier!.length) {\n                        promptState.setMetaBlock(true);\n                    }\n                    promptItem.value = loraName;\n                }\n            }\n            nestTypes.pop();\n\n            updatePrependFlags(promptItem);\n            flush(promptItem);\n            updateContextState(char);\n            promptItem = makePromptItem(nestTypes[nestTypes.length - 1], i + 1);\n            continue;\n        }\n\n        if (currentNestType === NestType.Lora) {\n            if (promptItem.value !== '' || char !== ' ') {\n                promptItem.value += char;\n            }\n            continue;\n        }\n\n        if (delimiters[currentNestType]?.has(char)) {\n            updatePrependFlags(promptItem);\n            flush(promptItem);\n            updateContextState(char);\n            promptItem = makePromptItem(currentNestType, i + 1);\n            continue;\n        }\n\n        if (promptItem.value === '') {\n            promptItem.position = i;\n        }\n        promptItem.value += char;\n    }\n\n    if (promptState.getActivePromptItemIndex() < 0) {\n        setActivePromptItem(promptItem);\n    }\n    promptState.getPromptItemList().forEach((promptItem) => {\n        promptItem.value = promptItem.value.replace(/_/g, ' ');\n    });\n    updatePrependFlags(promptItem);\n    flush(promptItem);\n}\n\nfunction isNumber(value: string): boolean {\n    if (value.trim() === '') {\n        return false;\n    }\n    return !isNaN(+value);\n}\n", "import * as db_lora from '../database/lora';\nimport * as db_sg from '../database/suggestion';\nimport * as db_tag from '../database/tag';\nimport * as editor from '../prompt/editor';\nimport * as parser from '../prompt/parser';\nimport { EXTENSION_ID } from '../shared/const/common';\nimport * as contextState from '../shared/state/context';\nimport * as promptState from '../shared/state/prompt';\nimport { LoraResult, SuggestionResult, TagResult } from '../shared/types/model';\nimport { PromptItemType } from '../shared/types/prompt';\nimport { debounceWithLeadingTrailing, escapeRegex, formatNumberWithUnits } from '../shared/util';\n\nenum ContextType {\n    WithTabs,\n    WithoutTabs,\n    Simple,\n}\n\nlet noticeElement: HTMLElement;\n\nconst inputDebounceDelay = 200;\n\nconst debounceUpdateContext = debounceWithLeadingTrailing(updateContext, inputDebounceDelay);\nconst debounceSearchWithApi = debounceWithLeadingTrailing(db_tag.searchWithApi, 1100);\n\nexport function createContext(parent: HTMLElement) {\n    contextState.setComponent(document.createElement('div'));\n    const component = contextState.getComponent();\n    component.id = 'suggestion-box';\n    setVisible(component, false);\n    component.style.top = '0';\n    component.style.left = '0';\n    parent.appendChild(component);\n\n    contextState.setTabContainer(document.createElement('div'));\n    const tabContainer = contextState.getTabContainer();\n    tabContainer.className = 'tab-container';\n    component.appendChild(tabContainer);\n\n    const categories = ['All', 'Gen', 'Art', '', 'Copy', 'Chara', 'Meta'];\n    for (let i = 0; i < categories.length; i++) {\n        const category = categories[i];\n        if (category === '') {\n            continue;\n        }\n        const tabElement = document.createElement('div');\n        tabElement.className = 'tab';\n        if (i === 0) {\n            tabElement.classList.add('selected');\n            contextState.setActiveTab(tabElement);\n        }\n        const groupClass = `group${i - 1}`;\n        if (i > 0) {\n            tabElement.dataset.category = groupClass;\n            tabElement.classList.add(groupClass);\n        }\n        tabElement.textContent = category;\n        tabElement.addEventListener('mousedown', (e) => {\n            contextState.setActiveTab(e.target as HTMLDivElement);\n            changeTab();\n            e.preventDefault();\n        });\n        tabContainer.appendChild(tabElement);\n    }\n\n    contextState.setListContainer(document.createElement('ul'));\n    const listContainer = contextState.getListContainer();\n    component.appendChild(listContainer);\n\n    contextState.setPreviewContainer(document.createElement('div'));\n    const previewContainer = contextState.getPreviewContainer();\n    previewContainer.className = 'preview';\n    previewContainer.appendChild(document.createElement('img'));\n    component.appendChild(previewContainer);\n\n    listContainer.addEventListener('mousedown', (e) => {\n        if (!contextState.hasVisibleResultList()) {\n            return;\n        }\n        const result = contextState.getSelectedResult();\n        if (result && (e.target instanceof HTMLLIElement || e.target instanceof HTMLAnchorElement)) {\n            e.stopPropagation();\n            editor.insertWordIntoPrompt(result);\n            if (e.target instanceof HTMLAnchorElement) {\n                const tagData = (result as TagResult).model;\n                const tag = tagData.isOfficial ? tagData.value : tagData.consequentTagModel!.value;\n                openWiki(tag);\n            }\n        }\n    });\n\n    listContainer.addEventListener('mousemove', (e) => {\n        if (!contextState.hasVisibleResultList()) {\n            return;\n        }\n        const element = (e.target as HTMLElement).closest('li');\n        if (element) {\n            changeSelectResult(contextState.getResult(+element.dataset.index!));\n        }\n    });\n\n    noticeElement = document.createElement('li');\n    noticeElement.className = 'notice';\n}\n\nexport function setActiveTextarea(_textarea: PilotTextArea) {\n    if (!window.pilotIsActive) {\n        return;\n    }\n    contextState.setActiveTextarea(_textarea);\n}\n\nexport function updateContextPosition() {\n    if (!window.pilotIsActive) {\n        return;\n    }\n\n    const textarea = contextState.getActiveTextarea();\n    if (!textarea) {\n        return;\n    }\n    const dummy = textarea.dummy;\n    const caret = dummy.caret;\n\n    const caretIndex = textarea.selectionEnd;\n    const textBeforeCaret = textarea.value.slice(0, caretIndex);\n    const textAfterCaret = textarea.value.slice(caretIndex);\n\n    dummy.textContent = textBeforeCaret;\n    caret.textContent = textAfterCaret[0] || '\\u200b';\n    dummy.appendChild(caret);\n\n    const rect = caret.getBoundingClientRect();\n    const computedStyle = window.getComputedStyle(textarea);\n\n    const lineHeight = parseFloat(computedStyle.lineHeight.replace(/[^\\d\\.]+/, ''));\n\n    const textareaRect = textarea.getBoundingClientRect();\n    const x = rect.left - textareaRect.left - textarea.scrollLeft;\n    const y = rect.top - textareaRect.top - textarea.scrollTop + lineHeight;\n\n    const component = contextState.getComponent();\n    component.style.transform = `translate(${x}px, ${y}px)`;\n\n    debounceUpdateContext();\n}\n\nfunction updateContext() {\n    if (!window.pilotIsActive) {\n        return;\n    }\n    if (promptState.isComposing()) {\n        return;\n    }\n\n    if (db_tag.hasError() || db_lora.hasError() || db_sg.hasError()) {\n        showContext(buildLoraAutocomplete(), ContextType.WithoutTabs, 'An error occurred. Please reload the page.');\n        return;\n    }\n\n    if (!db_tag.isLoaded() || !db_lora.isLoaded() || !db_sg.isLoaded()) {\n        showContext(buildLoraAutocomplete(), ContextType.WithoutTabs, 'Initializing database...');\n        return;\n    }\n\n    const textarea = contextState.getActiveTextarea()!;\n    parser.updatePromptState(textarea.value, textarea.selectionEnd);\n\n    if (promptState.isMetaBlock()) {\n        hide();\n        return;\n    }\n\n    const existTags = new Set(\n        promptState\n            .getPromptItemList()\n            .filter((promptItem, i) => i !== promptState.getActivePromptItemIndex() && promptItem.type !== PromptItemType.Lora)\n            .map((promptItem) => promptItem.value),\n    );\n\n    const activePromptItem = promptState.getActivePromptItem();\n    const activeWord = promptState.getActiveWord();\n    if (activePromptItem.type === PromptItemType.Lora && activeWord === '') {\n        hide();\n        return;\n    }\n\n    if (!window.opts[`${EXTENSION_ID}_suggest_enabled`] && activeWord === '') {\n        hide();\n        return;\n    }\n\n    const priorityTag: string[] = [];\n    if (activePromptItem.type !== PromptItemType.Lora) {\n        let nearestTag: string | undefined;\n        for (let i = promptState.getActivePromptItemIndex() - 1; i >= 0; i--) {\n            const promptItem = promptState.getPromptItem(i);\n            if (promptItem.type === PromptItemType.Lora) {\n                continue;\n            }\n            nearestTag = promptItem.value;\n            break;\n        }\n        const suggestions = db_sg.searchSuggestion(nearestTag, existTags);\n\n        if (activeWord === '') {\n            contextState.setResultList(suggestions.slice(0, 10));\n            showContext(buildSuggestion(), ContextType.Simple);\n            return;\n        }\n\n        for (const suggestion of suggestions) {\n            if (suggestion.model.value.startsWith(activeWord)) {\n                priorityTag.push(suggestion.model.value);\n            }\n        }\n\n        if (activeWord.startsWith('*') && activeWord.length > 1) {\n            debounceSearchWithApi(activeWord.substring(1), (resultSet) => {\n                contextState.setResultList(resultSet);\n                showContext(buildTagAutocomplete(existTags), ContextType.WithTabs);\n            });\n            contextState.clearResultList();\n            showContext(null, ContextType.WithTabs, 'Waiting for API response...');\n        } else {\n            const result = db_tag.searchTag(activeWord, priorityTag);\n            contextState.setResultList(result);\n            showContext(buildTagAutocomplete(existTags), ContextType.WithTabs);\n        }\n    } else {\n        contextState.setResultList(db_lora.searchLora(activeWord));\n        showContext(buildLoraAutocomplete(), ContextType.WithoutTabs);\n    }\n}\n\nfunction buildTagAutocomplete(existTags: Set<string>): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    contextState.getResultList<TagResult[]>().forEach((result) => {\n        const element = document.createElement('li');\n\n        const recommendMark = document.createElement('span');\n        recommendMark.className = 'highlight';\n\n        const helpLink = document.createElement('a');\n        helpLink.className = 'wiki';\n\n        const tagTitleElement = document.createElement('span');\n        tagTitleElement.className = 'title';\n\n        const postCountElement = document.createElement('span');\n        postCountElement.className = 'post-count';\n\n        let title = result.model.value;\n        let tagTitle = title;\n        for (const matchedWord of result.matchedWords) {\n            const escapedWord = escapeRegex(matchedWord.word);\n            tagTitle = tagTitle.replace(new RegExp(`(?<=^| |-|>)(${escapedWord})(?!>)`, 'gi'), '<b>$1</b>');\n        }\n        if (result.model.consequentTagModel) {\n            title = result.model.consequentTagModel.value;\n            tagTitle += '<span></span>' + title;\n        }\n        tagTitleElement.innerHTML = tagTitle;\n\n        if (result.model.useCount > 0) {\n            recommendMark.classList.add('recommend');\n        }\n        if (result.model.postCount > 0) {\n            helpLink.textContent = '?';\n            postCountElement.textContent = formatNumberWithUnits(result.model.postCount);\n        }\n\n        if (existTags.has(title)) {\n            element.classList.add('contains');\n        }\n        element.classList.add(`group${result.model.category}`);\n\n        element.appendChild(recommendMark);\n        element.appendChild(helpLink);\n        element.appendChild(tagTitleElement);\n        element.appendChild(postCountElement);\n        fragment.appendChild(element);\n    });\n\n    return fragment;\n}\n\nfunction buildLoraAutocomplete(): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    contextState.getResultList<LoraResult[]>().forEach((result) => {\n        const element = document.createElement('li');\n        const tagElem = document.createElement('span');\n        tagElem.className = 'title';\n\n        let loraName = result.model.value;\n        for (const matchWord of result.matchWords) {\n            const escapedWord = escapeRegex(matchWord);\n            loraName = loraName.replace(new RegExp(`(${escapedWord})(?!>)`, 'gi'), '<b>$1</b>');\n        }\n        tagElem.innerHTML = `&lt;lora:${loraName}&gt;`;\n\n        element.classList.add(`group${result.model.group}`);\n        element.appendChild(tagElem);\n        fragment.appendChild(element);\n    });\n\n    return fragment;\n}\n\nfunction buildSuggestion(): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    contextState.getResultList<SuggestionResult[]>().forEach((result) => {\n        const element = document.createElement('li');\n        element.textContent = result.model.value;\n        element.classList.add('suggest');\n        fragment.appendChild(element);\n    });\n\n    return fragment;\n}\n\nfunction adjustActiveTextarea() {\n    const rect = contextState.getActiveTextarea()!.getBoundingClientRect();\n    const component = contextState.getComponent();\n    component.style.top = `${rect.top + window.scrollY}px`;\n    component.style.left = `${rect.left + window.scrollX}px`;\n}\n\nfunction showContext(fragment: DocumentFragment | null, contextType: ContextType, pendingMessage: string | undefined = undefined) {\n    adjustActiveTextarea();\n\n    contextState.clearVisibleResultList();\n    const listContainer = contextState.getListContainer();\n    listContainer.scrollTop = 0;\n    listContainer.innerHTML = '';\n\n    if (contextType !== ContextType.Simple) {\n        listContainer.appendChild(noticeElement);\n    }\n\n    if (fragment?.children?.length) {\n        const resultList = contextState.getResultList();\n        for (let i = 0; i < fragment.children.length; i++) {\n            const element = fragment.children[i] as HTMLLIElement;\n            resultList[i].view = element;\n            element.dataset.index = i.toString();\n            if (i === 0) {\n                element.classList.add('selected');\n            }\n            element.dataset.navigateIndex = i.toString();\n            contextState.addVisibleResult(resultList[i]);\n        }\n        listContainer.appendChild(fragment);\n    }\n    listContainer.scrollTop = 0;\n\n    noticeElement.dataset.type = '';\n    setVisible(noticeElement, false);\n    if (pendingMessage) {\n        noticeElement.textContent = pendingMessage;\n        noticeElement.dataset.type = 'pending';\n        setVisible(noticeElement, true);\n    } else if (contextType !== ContextType.Simple && !contextState.hasVisibleResultList()) {\n        noticeElement.textContent = 'Not found';\n        setVisible(noticeElement, true);\n    }\n\n    const tabContainer = contextState.getTabContainer();\n    if (contextType === ContextType.WithTabs) {\n        tabContainer.classList.remove('no-tab');\n        contextState.setActiveTab(tabContainer.children[0] as HTMLDivElement);\n        changeTab();\n    } else {\n        if (!tabContainer.classList.contains('no-tab')) {\n            tabContainer.classList.add('no-tab');\n        }\n    }\n\n    const resultList = contextState.getVisibleResultList();\n    if (resultList.length > 0) {\n        contextState.setSelectedResult(resultList[0]);\n    } else {\n        contextState.setSelectedResult(undefined);\n    }\n    updateLoraPreview();\n\n    contextState.setClosed(false);\n    setVisible(contextState.getComponent(), true);\n}\n\nfunction updateLoraPreview() {\n    const result = contextState.getSelectedResult();\n    const previewContainer = contextState.getPreviewContainer();\n    if (result instanceof LoraResult) {\n        previewContainer.children[0].setAttribute('src', result.model.previewFile);\n        setVisible(previewContainer, true);\n    } else {\n        previewContainer.children[0].removeAttribute('src');\n        setVisible(previewContainer, false);\n    }\n}\n\nexport function navigateSelection(direction: number) {\n    if (!contextState.hasVisibleResultList()) {\n        return;\n    }\n    let selectedResult = contextState.getSelectedResult();\n    if (selectedResult) {\n        selectedResult.view!.classList.remove('selected');\n    } else {\n        selectedResult = contextState.getVisibleResult(0);\n        contextState.setSelectedResult(selectedResult);\n    }\n\n    let selectedElement = selectedResult!.view!;\n    if (selectedResult) {\n        const selectedIndex = parseInt(selectedElement.dataset.navigateIndex ?? '0') + direction;\n        const visibleResultList = contextState.getVisibleResultList();\n        if (selectedIndex < 0) {\n            contextState.setSelectedResult(visibleResultList[visibleResultList.length - 1] || null);\n        } else if (selectedIndex >= visibleResultList.length) {\n            contextState.setSelectedResult(visibleResultList[0] || null);\n        } else {\n            contextState.setSelectedResult(visibleResultList[selectedIndex]);\n        }\n    }\n\n    selectedElement = contextState.getSelectedResult()!.view!;\n    if (selectedElement) {\n        selectedElement.classList.add('selected');\n        selectedElement.scrollIntoView({ block: 'nearest' });\n    }\n\n    updateLoraPreview();\n}\n\nexport function changeSelectResult(result: TagResult | LoraResult | SuggestionResult) {\n    const currentSelectedItem = contextState.getSelectedResult();\n    if (result !== currentSelectedItem) {\n        if (currentSelectedItem) {\n            currentSelectedItem!.view!.classList.remove('selected');\n        }\n        contextState.setSelectedResult(result);\n\n        result.view!.classList.add('selected');\n        updateLoraPreview();\n    }\n}\n\nfunction changeTab() {\n    const tabContainer = contextState.getTabContainer();\n\n    for (const tab of Array.from(tabContainer.children)) {\n        if (tab === contextState.getActiveTab()) {\n            if (!tab.classList.contains('selected')) {\n                tab.classList.add('selected');\n            }\n        } else {\n            tab.classList.remove('selected');\n        }\n    }\n\n    const listContainer = contextState.getListContainer();\n    listContainer.scrollTop = 0;\n\n    contextState.clearVisibleResultList();\n    const category = contextState.getActiveTab().dataset.category;\n    let index = 0;\n    contextState.getResultList().forEach((result) => {\n        const element = result.view!;\n        if (element.classList.contains('notice')) {\n            return;\n        }\n        if (category) {\n            if (element.classList.contains(category)) {\n                element.dataset.navigateIndex = index.toString();\n                contextState.addVisibleResult(result);\n                setVisible(element, true);\n                index++;\n            } else {\n                element.dataset.navigateIndex = '-1';\n                setVisible(element, false);\n            }\n        } else {\n            element.dataset.navigateIndex = index.toString();\n            contextState.addVisibleResult(result);\n            setVisible(element, true);\n            index++;\n        }\n    });\n\n    setVisible(noticeElement, false);\n    if (noticeElement.dataset.type === 'pending') {\n        setVisible(noticeElement, true);\n    } else if (!contextState.hasVisibleResultList()) {\n        noticeElement.textContent = 'Not found';\n        setVisible(noticeElement, true);\n    }\n    navigateSelection(0);\n}\n\nfunction setVisible(element: HTMLElement, visible: boolean) {\n    element.style.display = visible ? '' : 'none';\n}\n\nfunction hide() {\n    setVisible(contextState.getComponent(), false);\n    contextState.clearResultList();\n    contextState.clearVisibleResultList();\n    contextState.setSelectedResult(undefined);\n}\n\nexport function close() {\n    if (!contextState.isClosed()) {\n        contextState.setClosed(true);\n        hide();\n    }\n}\n\nexport function openWiki(title: string) {\n    if (title) {\n        title = title.replace(' ', '_');\n        if (/^[0-9]+$/.test(title)) {\n            title = `~${title}`;\n        }\n        const domain = window.opts[`${EXTENSION_ID}_tag_source`] as string;\n        window.open(`https://${domain}/wiki_pages/${encodeURIComponent(title)}`);\n    }\n}\n", "import * as editor from '../prompt/editor';\nimport * as parser from '../prompt/parser';\nimport * as contextState from '../shared/state/context';\nimport * as promptState from '../shared/state/prompt';\nimport { TagResult } from '../shared/types/model';\nimport { PromptItem, PromptItemType } from '../shared/types/prompt';\nimport * as context from '../ui/context';\n\nlet isStylesheetInjected = false;\nlet processingPromise: Promise<PromptItem> | undefined;\n\nenum KeyCode {\n    TAB = 'Tab',\n    ENTER = 'Enter',\n    ARROW_DOWN = 'ArrowDown',\n    ARROW_UP = 'ArrowUp',\n    ESCAPE = 'Escape',\n    ARROW_LEFT = 'ArrowLeft',\n    ARROW_RIGHT = 'ArrowRight',\n    HOME = 'Home',\n    END = 'End',\n}\n\nexport function bind(textarea: PilotTextArea) {\n    if (!isStylesheetInjected) {\n        isStylesheetInjected = true;\n        const computedStyle = getComputedStyle(textarea);\n        let cssStyleString = '';\n        const ignoredCssProperties = new Set<string>(['width', 'height', 'inline-size', 'block-size', 'resize']);\n        for (let i = 0; i < computedStyle.length; i++) {\n            const prop = computedStyle[i];\n            if (!ignoredCssProperties.has(prop)) {\n                const value = computedStyle.getPropertyValue(prop);\n                cssStyleString += `${prop}: ${value};`;\n            }\n        }\n        const cssStyleSheet = new CSSStyleSheet();\n        cssStyleSheet.replaceSync(`.prompt_pilot-dummy {${cssStyleString}}`);\n        document.adoptedStyleSheets = [...document.adoptedStyleSheets, cssStyleSheet];\n    }\n\n    const dummyDiv = document.createElement('div') as HTMLDivElement & { caret: HTMLSpanElement };\n    dummyDiv.className = 'prompt_pilot-dummy';\n    dummyDiv.style.position = 'absolute';\n    dummyDiv.style.visibility = 'hidden';\n    dummyDiv.style.pointerEvents = 'none';\n    textarea.parentNode?.insertBefore(dummyDiv, textarea.nextSibling);\n    textarea.dummy = dummyDiv;\n\n    const caretSpan = document.createElement('span');\n    dummyDiv.caret = caretSpan;\n\n    textarea.addEventListener('focus', (e) => handleFocus(e));\n    textarea.addEventListener('blur', () => handleBlur());\n\n    textarea.addEventListener('compositionend', () => handleCompositionend());\n    textarea.addEventListener('input', () => handleInput());\n    textarea.addEventListener('keydown', (e) => handleKeyDown(e));\n    textarea.addEventListener('keyup', (e) => handleKeyUp(e));\n\n    textarea.addEventListener('mousedown', (e) => handleMouseDown(e));\n    textarea.addEventListener('mouseup', (e) => handleMouseUp(e));\n}\n\nfunction handleFocus(e: FocusEvent): void {\n    context.setActiveTextarea(e.target as PilotTextArea);\n}\n\nfunction handleBlur(): void {\n    context.close();\n}\n\nfunction handleMouseDown(e: MouseEvent): void {\n    if (!window.pilotIsActive) {\n        return;\n    }\n\n    context.close();\n\n    if (e.ctrlKey) {\n        // waiting for the textarea to be updated\n        setTimeout(() => {\n            processingPromise = new Promise((resolve) => {\n                const textarea = contextState.getActiveTextarea()!;\n                parser.updatePromptState(textarea.value, textarea.selectionEnd);\n                resolve(promptState.getActivePromptItem());\n            });\n        }, 50);\n    }\n}\n\nfunction handleMouseUp(e: MouseEvent): void {\n    if (!window.pilotIsActive) {\n        return;\n    }\n\n    if (e.ctrlKey && processingPromise) {\n        processingPromise.then((promptItem) => {\n            if (promptItem.type !== PromptItemType.Lora) {\n                context.openWiki(promptItem.value);\n            }\n        });\n    }\n}\n\nfunction handleCompositionend(): void {\n    promptState.setComposing(false);\n    context.updateContextPosition();\n}\n\nfunction handleInput(): void {\n    if (!promptState.isWeightChanging()) {\n        context.updateContextPosition();\n    } else if (!contextState.isClosed()) {\n        context.close();\n    }\n}\n\nfunction handleKeyDown(e: KeyboardEvent): void {\n    if (!window.pilotIsActive) {\n        return;\n    }\n\n    const key = e.key as KeyCode;\n    if (e.ctrlKey && (key === KeyCode.ARROW_DOWN || key === KeyCode.ARROW_UP)) {\n        promptState.setWeightChanging(true);\n    }\n\n    promptState.setComposing(e.isComposing);\n    if (promptState.isComposing()) {\n        return;\n    }\n    if (contextState.isClosed()) {\n        return;\n    }\n\n    if (key === KeyCode.ESCAPE) {\n        context.close();\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n    }\n\n    if (!contextState.hasVisibleResultList()) {\n        return;\n    }\n\n    if (key === KeyCode.TAB) {\n        const result = contextState.getSelectedResult();\n        if (result) {\n            editor.insertWordIntoPrompt(result);\n            if (e.shiftKey && result instanceof TagResult && result.model.isOfficial !== undefined) {\n                const tag = result.model.isOfficial ? result.model.value : result.model.consequentTagModel!.value;\n                context.openWiki(tag);\n            }\n        }\n        e.preventDefault();\n    } else if (key === KeyCode.ARROW_DOWN || key === KeyCode.ARROW_UP) {\n        if (!e.ctrlKey && !e.shiftKey) {\n            const direction = key === KeyCode.ARROW_DOWN ? 1 : -1;\n            context.navigateSelection(direction);\n            e.preventDefault();\n        }\n    }\n}\n\nfunction handleKeyUp(e: KeyboardEvent): void {\n    if (!window.pilotIsActive) {\n        return;\n    }\n\n    promptState.setWeightChanging(false);\n\n    promptState.setComposing(e.isComposing);\n    if (promptState.isComposing()) {\n        return;\n    }\n    if (contextState.isClosed()) {\n        return;\n    }\n\n    const key = e.key as KeyCode;\n    if ([KeyCode.ARROW_LEFT, KeyCode.ARROW_RIGHT, KeyCode.HOME, KeyCode.END].includes(key)) {\n        context.updateContextPosition();\n        e.preventDefault();\n    }\n}\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "import * as db_lora from './database/lora';\nimport * as db_sg from './database/suggestion';\nimport * as db_tag from './database/tag';\nimport { API_PREFIX, EXTENSION_ID } from './shared/const/common';\nimport * as contextState from './shared/state/context';\nimport { ResponseData } from './shared/types/api';\nimport { fetchWithRetry } from './shared/util';\nimport * as binder from './ui/binder';\nimport * as context from './ui/context';\nimport { gunzipSync } from 'fflate';\n\ndeclare function gradioApp(): HTMLElement;\ndeclare function onUiLoaded(callback: VoidFunction): void;\ndeclare function onOptionsChanged(callback: VoidFunction): void;\n\nwindow.pilotIsActive = true;\n\nexport let resolveInitialized: ((value: boolean) => void) | null;\nconst initializedPromise = new Promise<boolean>((resolve) => {\n    resolveInitialized = resolve;\n});\n\nonUiLoaded(() => {\n    try {\n        context.createContext(document.body);\n\n        const textareaSelector = \"*:is([id*='_toprow'] [id*='_prompt'], .prompt) textarea\";\n        const promptTextareas = gradioApp().querySelectorAll<HTMLTextAreaElement>(textareaSelector);\n        promptTextareas.forEach((textarea) => {\n            binder.bind(textarea as PilotTextArea);\n        });\n\n        const refreshButtonSelector = '.extra-network-control--refresh';\n        const refreshButtons = gradioApp().querySelectorAll<HTMLDivElement>(refreshButtonSelector);\n        refreshButtons.forEach((button) => {\n            button.addEventListener('click', () => {\n                fetch(`${API_PREFIX}/refresh`, { method: 'POST' }).then(async (res) => {\n                    const resData: ResponseData | undefined = await res.json();\n                    db_lora.initializeLoraModels(resData);\n                });\n            });\n        });\n\n        fetchWithRetry(`file=extensions/sd-webui-prompt-pilot/models.json.gz`, {}).then(async (res) => {\n            if (!res.ok) {\n                db_tag.setErrorFlag(true);\n                db_lora.setErrorFlag(true);\n                db_sg.setErrorFlag(true);\n            }\n\n            const buffer = new Uint8Array(await res.arrayBuffer());\n            const decompressedBuffer = gunzipSync(buffer);\n            const jsonString = new TextDecoder('utf-8').decode(decompressedBuffer);\n            const resData = JSON.parse(jsonString);\n\n            initializedPromise.then(() => {\n                db_tag.initializeTagModels(resData);\n                db_lora.initializeLoraModels(resData);\n                db_sg.initializeSuggestionModels(resData);\n                if (!contextState.isClosed()) {\n                    context.updateContextPosition();\n                }\n            });\n        });\n    } catch (e) {\n        console.error(e);\n    }\n});\n\nonOptionsChanged(() => {\n    window.pilotIsActive = window.opts[`${EXTENSION_ID}_enabled`] as boolean;\n\n    if (resolveInitialized) {\n        resolveInitialized(true);\n        resolveInitialized = null;\n    }\n});\n"],
  "mappings": "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",
  "names": ["EXTENSION_ID", "API_PREFIX", "Result", "model", "TagResult", "isPriority", "other", "query", "joinedQuery", "queries", "resultCount", "i", "count", "LoraResult", "thisStartsQuery", "otherStartsQuery", "q", "title", "SuggestionResult", "errorFlag", "loraModels", "isLoaded", "hasError", "setErrorFlag", "flag", "initializeLoraModels", "resData", "lora_name", "data", "e", "searchLora", "query", "queries", "q", "resultSet", "lora", "matchWordSet", "word", "flatWord", "result", "LoraResult", "a", "b", "groupCounter", "EXTENSION_ID", "errorFlag", "suggestionModels", "isLoaded", "hasError", "setErrorFlag", "flag", "initializeSuggestionModels", "resData", "word", "record", "sorted", "count1", "count2", "count", "e", "searchSuggestion", "nearestTag", "existTags", "suggestions", "result", "candidate", "SuggestionResult", "errorFlag", "tagModels", "tagIndex", "alwaysUnderscoreTags", "alwaysSpaceTags", "isLoaded", "hasError", "setErrorFlag", "flag", "initializeTagModels", "resData", "EXTENSION_ID", "tag", "data", "splitTag", "tagModel", "alias", "splitAlias", "aliasTagModel", "buildTagIndex", "e", "getPrefixes", "maxLen", "set", "t", "len", "prefixes", "p", "appendTagModel", "getTagModel", "searchTag", "query", "priorityTags", "queries", "q", "joinedQuery", "priorityTagSet", "resultList", "resultKeySet", "queryForCandidate", "prefixKey", "candidateTagList", "key", "matchedWords", "i", "matchedQueryIndices", "result", "TagResult", "consequentTagMatchCount", "r", "acc", "consequentTag", "resultTagCount", "resultCount", "m", "a", "b", "groupCounter", "searchWithApi", "callback", "apiUrl", "resultSet", "res", "item", "consequentTagModel", "err", "_component", "_activeTextarea", "_closed", "_visibleResultList", "_selectedResult", "_resultList", "_tabContainer", "_listContainer", "_previewContainer", "_activeTab", "getComponent", "setComponent", "component", "getActiveTextarea", "setActiveTextarea", "textarea", "isClosed", "setClosed", "closed", "getVisibleResultList", "getVisibleResult", "index", "hasVisibleResultList", "clearVisibleResultList", "addVisibleResult", "result", "getSelectedResult", "setSelectedResult", "getResultList", "getResult", "setResultList", "resultList", "clearResultList", "getTabContainer", "setTabContainer", "tabContainer", "getListContainer", "setListContainer", "listContainer", "getPreviewContainer", "setPreviewContainer", "previewContainer", "getActiveTab", "setActiveTab", "activeTabElement", "debounceWithLeadingTrailing", "func", "wait", "timeout", "lastCallTime", "lastArgs", "hasPendingTrailing", "args", "now", "fetchWithRetry", "input", "init", "retries", "delay", "attempt", "res", "resolve", "formatNumberWithUnits", "num", "escapeRegex", "str", "escapePrompt", "unescapePrompt", "result", "i", "splitStringWithIndices", "input", "delimiter", "regex", "match", "lastIndex", "_prompt", "_caret", "_isComposing", "_isWeightChanging", "_activeWord", "_activePromptItemIndex", "_promptItems", "_isMetaBlock", "_prependComma", "_prependSpace", "initialize", "prompt", "caret", "getPrompt", "getCaret", "_caret", "isComposing", "_isComposing", "setComposing", "isWeightChanging", "_isWeightChanging", "setWeightChanging", "getActiveWord", "_activeWord", "setActiveWord", "activeWord", "getActivePromptItemIndex", "_activePromptItemIndex", "setActivePromptItemIndex", "activeTagIndex", "getPromptItemList", "_promptItems", "getPromptItem", "index", "getActivePromptItem", "addPromptItem", "promptItem", "_promptItems", "isMetaBlock", "_isMetaBlock", "setMetaBlock", "needPrependComma", "_prependComma", "setNeedPrependComma", "prependComma", "needPrependSpace", "_prependSpace", "setNeedPrependSpace", "prependSpace", "insertWordIntoPrompt", "result", "getSelectedResult", "insertionInfo", "TagResult", "getTagInsertionInfo", "LoraResult", "getLoraInsertionInfo", "SuggestionResult", "getSuggestionInsertionInfo", "usingExecCommand", "EXTENSION_ID", "textarea", "getActiveTextarea", "val", "model", "startPosition", "getActivePromptItem", "offset", "tags", "insertionRange", "getPrompt", "getCaret", "wordInfo", "splitStringWithIndices", "tag", "escapedPart", "escapeRegex", "unescapePrompt", "match", "insertTag", "source", "delimiter", "alwaysSpaceTags", "replaceToUnderscore", "alwaysUnderscoreTags", "getActiveWord", "needPrependComma", "needPrependSpace", "escapePrompt", "loraName", "caret", "category", "getTagModel", "word", "openerToType", "closerToType", "closerForType", "delimiters", "delimitersWithoutComma", "PREFIX_LENGTH", "metaKeywords", "dynamicPromptRegex", "matchMetaKeywordRegex", "makePromptItem", "nestType", "position", "promptItemType", "updatePromptState", "prompt", "caret", "initialize", "match", "_", "group1", "group2", "nestTypes", "isEscaped", "delimiter", "isNewLine", "flush", "promptItem", "addPromptItem", "updateContextState", "char", "updatePrependFlags", "getPromptItemList", "setNeedPrependComma", "setNeedPrependSpace", "setActivePromptItem", "activeTag", "getActiveWord", "setActiveWord", "setActivePromptItemIndex", "i", "currentNestType", "setMetaBlock", "openerType", "loraPrefix", "expectedCloser", "colonIndex", "word", "weightValue", "isNumber", "loraName", "multiplier", "getActivePromptItemIndex", "value", "noticeElement", "inputDebounceDelay", "debounceUpdateContext", "debounceWithLeadingTrailing", "updateContext", "debounceSearchWithApi", "searchWithApi", "createContext", "parent", "setComponent", "component", "getComponent", "setVisible", "setTabContainer", "tabContainer", "getTabContainer", "categories", "i", "category", "tabElement", "setActiveTab", "groupClass", "e", "changeTab", "setListContainer", "listContainer", "getListContainer", "setPreviewContainer", "previewContainer", "getPreviewContainer", "hasVisibleResultList", "result", "getSelectedResult", "insertWordIntoPrompt", "tagData", "tag", "openWiki", "element", "changeSelectResult", "getResult", "setActiveTextarea", "_textarea", "updateContextPosition", "textarea", "getActiveTextarea", "dummy", "caret", "caretIndex", "textBeforeCaret", "textAfterCaret", "rect", "computedStyle", "lineHeight", "textareaRect", "x", "y", "isComposing", "hasError", "showContext", "buildLoraAutocomplete", "isLoaded", "updatePromptState", "isMetaBlock", "hide", "existTags", "getPromptItemList", "promptItem", "getActivePromptItemIndex", "activePromptItem", "getActivePromptItem", "activeWord", "getActiveWord", "EXTENSION_ID", "priorityTag", "nearestTag", "getPromptItem", "suggestions", "searchSuggestion", "setResultList", "buildSuggestion", "suggestion", "resultSet", "buildTagAutocomplete", "clearResultList", "searchTag", "searchLora", "fragment", "getResultList", "recommendMark", "helpLink", "tagTitleElement", "postCountElement", "title", "tagTitle", "matchedWord", "escapedWord", "escapeRegex", "formatNumberWithUnits", "tagElem", "loraName", "matchWord", "adjustActiveTextarea", "contextType", "pendingMessage", "clearVisibleResultList", "resultList", "addVisibleResult", "getVisibleResultList", "setSelectedResult", "updateLoraPreview", "setClosed", "LoraResult", "navigateSelection", "direction", "selectedResult", "getVisibleResult", "selectedElement", "selectedIndex", "visibleResultList", "currentSelectedItem", "tab", "getActiveTab", "index", "visible", "close", "isClosed", "domain", "isStylesheetInjected", "processingPromise", "bind", "textarea", "isStylesheetInjected", "computedStyle", "cssStyleString", "ignoredCssProperties", "i", "prop", "value", "cssStyleSheet", "dummyDiv", "caretSpan", "e", "handleFocus", "handleBlur", "handleCompositionend", "handleInput", "handleKeyDown", "handleKeyUp", "handleMouseDown", "handleMouseUp", "setActiveTextarea", "close", "processingPromise", "resolve", "getActiveTextarea", "updatePromptState", "getActivePromptItem", "promptItem", "openWiki", "setComposing", "updateContextPosition", "isWeightChanging", "isClosed", "key", "setWeightChanging", "isComposing", "hasVisibleResultList", "result", "getSelectedResult", "insertWordIntoPrompt", "TagResult", "tag", "navigateSelection", "u8", "u16", "i32", "fleb", "fdeb", "clim", "freb", "eb", "start", "b", "i", "r", "j", "_a", "fl", "revfl", "_b", "fd", "revfd", "rev", "x", "hMap", "cd", "mb", "s", "l", "le", "co", "rvb", "sv", "r_1", "v", "m", "flt", "fdt", "flrm", "hMap", "flt", "fdrm", "hMap", "fdt", "max", "a", "m", "i", "bits", "d", "p", "o", "bits16", "shft", "slc", "v", "s", "e", "u8", "ec", "err", "ind", "msg", "nt", "e", "inflt", "dat", "st", "buf", "dict", "sl", "dl", "u8", "noBuf", "resize", "noSt", "cbuf", "l", "bl", "nbuf", "final", "pos", "bt", "lm", "dm", "lbt", "dbt", "tbts", "bits", "type", "flrm", "fdrm", "hLit", "hcLen", "tl", "ldt", "clt", "i", "clim", "clb", "max", "clbmsk", "clm", "hMap", "r", "s", "c", "n", "lt", "dt", "shft", "t", "lms", "dms", "lpos", "bits16", "sym", "add", "b", "fleb", "fl", "d", "dsym", "fd", "fdeb", "end", "shift", "dend", "slc", "et", "u8", "gzs", "d", "err", "flg", "st", "zs", "gzl", "l", "gunzipSync", "data", "opts", "st", "gzs", "err", "inflt", "u8", "gzl", "td", "tds", "et", "resolveInitialized", "initializedPromise", "resolve", "createContext", "textarea", "bind", "button", "API_PREFIX", "res", "resData", "initializeLoraModels", "fetchWithRetry", "setErrorFlag", "buffer", "decompressedBuffer", "gunzipSync", "jsonString", "initializeTagModels", "initializeSuggestionModels", "isClosed", "updateContextPosition", "EXTENSION_ID"]
}
